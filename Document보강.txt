브라우저 객체모델
	window
		.document 객체 (HTML 문서)
			-> HTML 수정, 변경, 추가 ...
			-> 1) DOMContentLoaded - HTML 태그가 보이는 상태
					- DOM 트리 구조가 구성이 완료가 된 상태
						(HTML 태그가 모두 불러와진 후 트리 구조로 정렬된상태)
						
			-> 2) load
				- 외부 자원이 모두 로드가된 이후에 발생하는 이벤트
					( 파일로 정의된 css, js, 이미지, 비디오, 내부 iframe 등)
					
		문서의 추가, 수정, 삭제가 가능한 시점
			-> DOM트리 구성이 완료가된 상태
			-> DOMContentLoaded 이벤트 발생 후에 HTML 조작이 가능하다
				
			<script defer>	- defer 속성 - DOMContentLoaded 이벤트 발생 이후에 실행
			<script async>	- async 속성	- 비동기로 스크립트실행
													- 무거운 작업을 하는 스크립트
													- DOM 조작은 불가
													
			HTML 요소를 선택
				1) 아이디로 선택	// 1개만 선택 가능
					document.getElementById("아이디명")	
				
				2) 클래스로 선택	// 복수 선택 가능
					document.getElementsByClassName("클래스명")
			
				3) 태그로 선택
					document.getElementsByTagName("태그명")
			
				4) name으로 선택
						-->	<input type="text" name="memId">
					document.getElementsByName("name 속성명")
					
				5) CSS 선택자로 선택
					document.querySelector("CSS 선택자");		// 최초로 매칭되는 1개만 선택
					document.querySelectorAll("CSS 선택자");		// 매칭되는 모든 선택자
				
						
			속성을 다루는 메서드
				(attribute)
						.getAttribute("속성명")
						.setAttribute("속성명", "값"); //추가, 변경
						.removeAttribute("속성명");
						
					많이 쓰는 속성은 document 객체에서 하위속성으로 바로 접근이 가능
					id	- 아이디
					classNmae	- 클래스
					style	- 스타일 CSS 적용 속성
					src		- 경로
					
					
			클래스 속성	-> 편의 기능을 담은 객체
						- classList
								.add		- 클래스 추가
								.remove	- 클래스 제거
								.toggle	- 클래스가 있으면 제거, 없으면 추가
								.contains	- 클래스의 존재 여부 (true, false)
								
		data-속성	-> 사용자 정의 속성
						-> 관리 객체
							.dataset
	